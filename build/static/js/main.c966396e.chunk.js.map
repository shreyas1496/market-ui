{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["JsonTable","require","cvt","prefix","obj","Math","round","average","diff","closeness","App","useState","sortOn","setSortOn","useFetch","loading","error","data","get","data2","useMemo","int","map","name","ltp","ma44","ma20","ma10","_orderBy","useEffect","id","setInterval","Date","now","clearInterval","className","style","padding","value","onChange","e","target","rows","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAKMA,EAAYC,EAAQ,IAG1B,SAASC,EAAIC,EAAQC,GAAM,IAAD,EACxB,OAAO,EAAP,2BACMD,EADN,QACqBE,KAAKC,MAAoB,IAAdF,EAAIG,SAAgB,KADpD,wBAEMJ,EAFN,SAEsBE,KAAKC,MAAiB,IAAXF,EAAII,MAAa,KAFlD,wBAGML,EAHN,UAGuBE,KAAKC,MAAsB,IAAhBF,EAAIK,WAAkB,KAHxD,EAiDaC,MA1Cf,WACE,MAA4BC,mBAAS,MAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA2CC,YAAS,2CAA4C,GAAI,IAA5FC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,MAAjB,IAAwBC,YAAxB,MAA+B,GAA/B,EAAmCC,EAAnC,EAAmCA,IAE7BC,EAASC,mBAAQ,WAErB,IAAMC,EAAMJ,EAAKK,KAAI,gBAAEC,EAAF,EAAEA,KAAMC,EAAR,EAAQA,IAAKC,EAAb,EAAaA,KAAMC,EAAnB,EAAmBA,KAAMC,EAAzB,EAAyBA,KAAzB,mBAAC,yBACpBJ,OAAMC,OAAQtB,EAAI,KAAMuB,IAAUvB,EAAI,KAAMwB,IAAUxB,EAAI,KAAMyB,OAGlE,OAAOC,kBAASP,EAAD,UAAST,EAAT,UAAyB,SACvC,CAACA,EAAQK,IAYZ,OAVAY,qBAAU,WACR,IAAMC,EAAKC,aAAY,kBAAMb,EAAI,SAAD,OAAUc,KAAKC,UAAW,KAC1D,OAAO,kBAAMC,cAAcJ,MAG1B,IAMD,sBAAKK,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SAEA,yBAAQC,MAAO,CAACC,QAAQ,QAASC,MAAO1B,EAAQ2B,SAAU,SAAAC,GAAC,OAAI3B,EAAU2B,EAAEC,OAAOH,QAAlF,UACE,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAGF,0BAASH,UAAU,SAAnB,UACCnB,GAAS,SACTD,GAAW,aACZ,cAACf,EAAD,CAAWmC,UAAW,SAAUO,KAAMvB,GAAYP,UCtCzC+B,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c966396e.chunk.js","sourcesContent":["import React, { useState, useMemo, useEffect } from 'react';\nimport './App.css';\nimport useFetch from 'use-http'\nimport {orderBy as _orderBy} from 'lodash'\n// @ts-ignore\nconst JsonTable = require('ts-react-json-table');\n\n// @ts-ignore\nfunction cvt(prefix, obj) {\n  return {\n    [`${prefix}-avg`]: Math.round(obj.average * 100) /100,\n    [`${prefix}-diff`]: Math.round(obj.diff * 100) /100,\n    [`${prefix}-close`]: Math.round(obj.closeness * 100) /100,\n  }\n}\n\nfunction App() {\n  const [sortOn, setSortOn] = useState('44');\n  const { loading, error, data = [], get } = useFetch('https://shreyas1496.tech/market-api/data', {}, [])\n\n  const data2 =  useMemo(() => {\n    // @ts-ignore\n    const int = data.map(({name, ltp, ma44, ma20, ma10}) => ({\n      name, ltp, ...cvt('44', ma44), ...cvt('20', ma20), ...cvt('10', ma10)\n    }));\n\n    return _orderBy(int, `${sortOn}-close`, 'asc');\n  }, [sortOn, data])\n  \n  useEffect(() => {\n    const id = setInterval(() => get(`?date=${Date.now()}`,), 20000);\n    return () => clearInterval(id)\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  \n\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      \n      <select style={{padding:'20px'}} value={sortOn} onChange={e => setSortOn(e.target.value)}>\n        <option value=\"44\">44</option>\n        <option value=\"20\">20</option>\n        <option value=\"10\">10</option>\n      </select>\n      </header>\n      <section className=\"tables\">\n      {error && 'Error!'}\n      {loading && 'Loading...'}\n      <JsonTable className={\"tables\"} rows={data2} key={sortOn} />\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}