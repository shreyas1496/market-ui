{"version":3,"sources":["firebase.js","components/notify.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["firebase","apps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","messaging","onMessage","payload","console","log","Notification","notification","title","body","Notify","setToken","permission","useState","enabled","setEnabled","onEnabled","useCallback","getToken","then","token","catch","err","useEffect","FormControlLabel","control","Checkbox","checked","onChange","name","label","columns","key","cell","row","style","backgroundColor","ltp","prevClose","App","sortOn","setSortOn","search","setSearch","useFetch","window","location","origin","loading","error","data","post","data2","useMemo","int","filter","includes","toUpperCase","map","closeNess","Math","abs","_get","_orderBy","todo","id","setInterval","Date","now","clearInterval","className","Select","value","e","target","TextField","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","theme","createMuiTheme","palette","type","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.f198047a.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/messaging\";\r\nimport \"firebase/analytics\";\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyAMa3AxZtC7telPQ5brHaHWodZaoG5d8r0\",\r\n  authDomain: \"quickynotify.firebaseapp.com\",\r\n  projectId: \"quickynotify\",\r\n  storageBucket: \"quickynotify.appspot.com\",\r\n  messagingSenderId: \"960543983205\",\r\n  appId: \"1:960543983205:web:65c7260dc369d72c71e88c\",\r\n  measurementId: \"G-5LVNTZHCYL\",\r\n};\r\n\r\nif (!firebase.apps.length) {\r\n  firebase.initializeApp(config);\r\n  firebase.analytics();\r\n}\r\n\r\nexport default firebase;\r\n","import FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport React, {\r\n  FunctionComponent,\r\n  ReactElement,\r\n  useCallback,\r\n  useEffect,\r\n  useState,\r\n} from \"react\";\r\nimport firebase from \"../firebase\";\r\n\r\ninterface Props {\r\n  setToken: (token: string) => void;\r\n  className?: string;\r\n}\r\n\r\nconst messaging = firebase.messaging();\r\n\r\nmessaging.onMessage((payload) => {\r\n  console.log(\"Message received. \", payload);\r\n  new Notification(payload.notification.title, {\r\n    body: payload.notification.body,\r\n  });\r\n});\r\n\r\nexport const Notify: FunctionComponent<Props> = ({\r\n  setToken,\r\n}): ReactElement => {\r\n  const permission = Notification.permission;\r\n  const [enabled, setEnabled] = useState(permission === \"granted\");\r\n\r\n  const onEnabled = useCallback(() => {\r\n    messaging\r\n      .getToken()\r\n      .then((token) => {\r\n        setEnabled(true);\r\n        setToken(token);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setEnabled(false);\r\n      });\r\n  }, [setToken]);\r\n\r\n  useEffect(() => {\r\n    if (permission === \"granted\") {\r\n      onEnabled();\r\n    }\r\n  }, [permission, onEnabled]);\r\n\r\n  return (\r\n    <>\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox checked={enabled} onChange={onEnabled} name=\"checkedA\" />\r\n        }\r\n        label=\"Notifications\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useMemo, useEffect, useCallback } from \"react\";\r\nimport \"./App.css\";\r\nimport useFetch from \"use-http\";\r\nimport { orderBy as _orderBy, get as _get } from \"lodash\";\r\nimport { Notify } from \"./components\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nconst columns = [\r\n  { key: \"name\", label: \"Name\" },\r\n  { key: \"prevClose\", label: \"Prev Close\" },\r\n  {\r\n    key: \"ltp\",\r\n    label: \"ltp\",\r\n    cell: (row: any) => (\r\n      <div\r\n        style={{ backgroundColor: row.ltp > row.prevClose ? \"green\" : \"red\" }}\r\n      >\r\n        {row.ltp}\r\n      </div>\r\n    ),\r\n  },\r\n  { key: \"movingAverageValues[0].value\", label: \"44 - avg\" },\r\n  { key: \"movingAverageValues[0].leads\", label: \"44 - leads\" },\r\n  { key: \"movingAverageValues[1].value\", label: \"20 - avg\" },\r\n  { key: \"movingAverageValues[1].leads\", label: \"20 - leads\" },\r\n  { key: \"movingAverageValues[2].value\", label: \"10 - avg\" },\r\n  { key: \"movingAverageValues[2].leads\", label: \"10 - leads\" },\r\n];\r\n\r\nfunction App() {\r\n  const [sortOn, setSortOn] = useState(\"0\");\r\n  const [token, setToken] = useState(\"\");\r\n  const [search, setSearch] = useState(\"\");\r\n  const {\r\n    loading,\r\n    error,\r\n    data = [],\r\n    post,\r\n  } = useFetch(`${window.location.origin}/market-api/data`, {}, []);\r\n\r\n  const data2 = useMemo(() => {\r\n    const int = data\r\n      // @ts-ignore\r\n      .filter(({ name }) =>\r\n        search ? name.includes(search.toUpperCase()) : true\r\n      )\r\n      .map((row: any) => {\r\n        const closeNess =\r\n          Math.abs(\r\n            row.ltp - _get(row, `movingAverageValues[${sortOn}].value`)\r\n          ) / row.ltp;\r\n        return { ...row, closeNess };\r\n      });\r\n\r\n    return _orderBy(int, `closeNess`, \"asc\");\r\n  }, [sortOn, data, search]);\r\n\r\n  const todo = useCallback(() => {\r\n    const id = setInterval(\r\n      () => post(`?date=${Date.now()}`, { \"fcm-token\": token }),\r\n      20000\r\n    );\r\n    return () => clearInterval(id);\r\n  }, [token, post]);\r\n\r\n  useEffect(todo, [todo]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <Notify setToken={setToken} />\r\n        <Select\r\n          value={sortOn}\r\n          onChange={(e) => setSortOn(e.target.value as string)}\r\n        >\r\n          <option value=\"0\">44</option>\r\n          <option value=\"1\">20</option>\r\n          <option value=\"2\">10</option>\r\n        </Select>\r\n        <TextField\r\n          label=\"Filter\"\r\n          onChange={(e) => setSearch(e.target.value)}\r\n          value={search}\r\n        />\r\n      </header>\r\n      <section className=\"tables\">\r\n        {error && \"Error!\"}\r\n        {loading && \"Loading...\"}\r\n\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              {columns.map(({ key, label }) => (\r\n                <th key={key}>{label}</th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {data2.map((row) => (\r\n              <tr key={row.name}>\r\n                {columns.map(({ key, cell }) => (\r\n                  <td key={key}>{cell ? cell(row) : _get(row, key)}</td>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport createMuiTheme from \"@material-ui/core/styles/createTheme\";\r\nimport ThemeProvider from \"@material-ui/styles/ThemeProvider\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    type: \"dark\",\r\n  },\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n      <App />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}